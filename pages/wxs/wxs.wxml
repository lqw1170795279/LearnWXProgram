<!--pages/wxs/wxs.wxml-->


<!-- wsx: weixing script 是小程序的一套脚本语言,结合wxml,可以构建出页面结构
     wxs和JavaScript是不同的语言,有自己的语法,并不和JavaScript一致.(不过基本一致)
     为什么要设计wxs语言
       1.wxml中不能直接调用Page/Component中定义的函数
       2.在某些情况下,我们希望可以使用函数来处理wxml中的数据(类似于Vue中的过滤器),这时就使用wxs
      wxs的使用的限制和特点
       1.WXS的运行环境是和其他JavaScript隔离的,WXS中不能调用其他JavaScript文件中定义的函数,也不能调用小程序提供的API
       2.WXS函数不能作为组件事件回调
       3.由于运行环境差异,在IOS设备上的小程序内的WXS会比JavaScript代码快2~20倍.在Android上二者运行效率无差异 -->

<!-- 保留22.33333的两位小数
1.错误的写法
<view>{{22.33333.toFised(2)}}</view>
数据.函数 的调用方法会出错 -->
<!-- 
2.错误写法,调用Page()中定义的函数
<view>{{numberToFixed(22.33333)}}</view> -->

<!-- wxs的定义方式 -->
<!-- wxs中第一的成员是私有的,在其他地方使用前要进行模块化导出 -->
<!-- <wxs module="info">
  var message = "HelloWorld";
  var name  = "Laiqinwei";
  function sum(num1,num2){
    return num1+num2
  }
  module.exports={
  message: message,
  name: name,
  sum: sum
}
</wxs> -->
<!-- <view>{{message}}</view> 无法直接使用-->

<view>{{info.message}}</view>
<view>{{info.sum(1,3)}}</view>
<!-- wxs定义方法2,在单独的wxs文件中定义,使用时先引入 -->
<!-- 引入时要用相对路径 -->
<wxs src="../../wxs/info.wxs" module="info" />
<view>{{info.name}}</view>
<view>{{info.sum(5,6)}}</view>



<!-- 3.wxs的应用 -->
<view>____________wsx的应用______________</view>
<wxs src="../../wxs/format.wxs" module="format" />
<view>{{format.priceFormat(price,4)}}</view>

